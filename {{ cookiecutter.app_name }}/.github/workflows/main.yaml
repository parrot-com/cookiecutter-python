name: main

on:
  pull_request:
  push:
    branches:
      - main

env:
  LOCAL_REGISTRY: ghcr.io/parrot-com
  IMAGE_REPOSITORY: {{ cookiecutter.ecr_repository_name }}
  IMAGE_REGISTRY: 325310340739.dkr.ecr.us-east-1.amazonaws.com

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set local image url env
        run: echo "LOCAL_IMAGE_URL=$LOCAL_REGISTRY/$IMAGE_REPOSITORY:latest" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ "{{" }} secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ "{{" }} secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/heads/}-$GITHUB_RUN_ID-${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Build Image
        id: build-image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          load: true
          build-args: RELEASE_VERSION_ARG=${{ "{{" }} env.RELEASE_VERSION }}
          tags: ${{ "{{" }} env.LOCAL_IMAGE_URL }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Flake8
        run: |
          docker run \
            --rm \
            $LOCAL_IMAGE_URL \
            poetry run flake8 /app

      - name: Black
        run: |
          docker run \
            --rm \
            $LOCAL_IMAGE_URL \
            poetry run black --check /app

      - name: Mypy
        run: |
          docker run \
            --rm \
            $LOCAL_IMAGE_URL \
            poetry run mypy /app/{{ cookiecutter.app_name }} /app/tests

      - name: isort
        run: |
          docker run \
            --rm \
            $LOCAL_IMAGE_URL \
            poetry run isort --check .

      - name: Test
        run: |
          docker run \
            -e APP_ENV=test \
            -w /app \
            --rm $LOCAL_IMAGE_URL \
            poetry run pytest

      - name: Login to ECR
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v1
        with:
          registry: ${{ "{{" }} env.IMAGE_REGISTRY }}
          username: ${{ "{{" }} secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ "{{" }} secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Push Image
        if: github.ref == 'refs/heads/main'
        env:
          ECR_IMAGE_URL: ${{ "{{" }} env.IMAGE_REGISTRY }}/${{ "{{" }} env.IMAGE_REPOSITORY }}:${{ "{{" }} env.RELEASE_VERSION }}
        run: |
          docker tag $LOCAL_IMAGE_URL $ECR_IMAGE_URL
          docker push $ECR_IMAGE_URL
