---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ cookiecutter.app_name }}
  annotations:
    kubernetes.io/ingress.class: "alb"
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/group.name: tooling
    alb.ingress.kubernetes.io/healthcheck-port: "http"
    alb.ingress.kubernetes.io/healthcheck-path: /status
    alb.ingress.kubernetes.io/tags: app=tooling,environment=staging,organizational_unit=engineering,owner=infrastructure,provisioner=k8s
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:325310340739:certificate/e5e28b51-3c1f-42ee-b03f-04db56b41f54
    alb.ingress.kubernetes.io/load-balancer-attributes: access_logs.s3.enabled=true,access_logs.s3.bucket=parrot-staging-load-balancer-access-logs,access_logs.s3.prefix=tooling
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
spec:
  rules:
    - http:
        paths:
          - path: /*
            pathType: ImplementationSpecific
            backend:
              service:
                name: ssl-redirect
                port:
                  name: use-annotation
    - host: {{ cookiecutter.app_name }}.parrotstaging.com
      http:
        paths:
          - path: /*
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ cookiecutter.app_name }}
                port:
                  number: 80
